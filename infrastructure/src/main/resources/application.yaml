# Server configuration
server:
  address: ${SERVER_ADDRESS:0.0.0.0}
  port: ${PORT:8080}
  servlet:
    context-path: ${CONTEXT_PATH:/api}

# Spring Config
spring:
  threads:
    virtual:
      enabled: ${SPRING_THREADS_VIRTUAL_ENABLED:true}
  rabbitmq:
    host: ${RABBIT_MQ_HOST:localhost}
    port: ${RABBIT_MQ_PORT:5672}
    username: ${RABBIT_MQ_USERNAME:guest}
    password: ${RABBIT_MQ_PASSWORD:guest}
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      username: ${REDIS_USERNAME:}
      password: ${REDIS_PASSWORD:}
  # DB Config
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:auth-service}
    username: ${POSTGRES_USER:dev}
    password: ${POSTGRES_PASSWORD:dev}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: ${HIKARI_MAX_POOL_SIZE:5}
      minimum-idle: ${HIKARI_MIN_IDLE:2}
      connection-timeout: ${HIKARI_CONNECTION_TIMEOUT:20000}
      idle-timeout: ${HIKARI_IDLE_TIMEOUT:300000}
  jpa:
    hibernate.ddl-auto: none
    open-in-view: false
    show-sql: true
    properties:
      hibernate:
        '[show_sql]': true
        '[format_sql]': true
        '[globally_quoted_identifiers]': true
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  docker:
    compose:
      file: ${SPRING_DOCKER_COMPOSE_FILE:./compose-test.yml}

# App Config
app:
  cors:
    # Use a single, comma-separated environment variable for all origins
    allowed-origins: ${APP_CORS_ALLOWED_ORIGINS:http://localhost}
    allowed-methods:
    allowed-headers:
    allow-credentials: ${APP_CORS_ALLOW_CREDENTIALS:true}
    max-age: 3600
  config:
    passkey:
      rp:
        rp-id: ${APP_PASSKEY_RPID:localhost}
        auth-mode: ${APP_AUTH_MODE:smartphone}
        origin: ${APP_PASSKEY_ORIGIN:http://localhost}
      security:
        user-presence-required: ${APP_UP_FLAG:true}
        user-verification-required: ${APP_UV_FLAG:true}
    otp:
      size: ${APP_OTP_SIZE:6}
      ttl: ${APP_OTP_TTL:120s}
    challenge:
      length: ${APP_CHALLENGE_LEN_BYTES:32}
      ttl: ${APP_CHALLENGE_TTL:60s}
  feature:
    verification:
      initiate:
        enabled: ${APP_FEATURE_VERIFICATION_INITIATE_ENABLED:true}
      complete:
        enabled: ${APP_FEATURE_VERIFICATION_COMPLETE_ENABLED:true}
    authentication:
      initiate:
        enabled: ${APP_FEATURE_AUTHENTICATION_INITIATE_ENABLED:true}
      complete:
        enabled: ${APP_FEATURE_AUTHENTICATION_COMPLETE_ENABLED:true}
    registration:
      complete:
        enabled: ${APP_FEATURE_REGISTRATION_COMPLETE_ENABLED:true}
  amqp:
    publisher:
      notifications:
        otp:
          exchange: notifications.commands.v1.exchange
          routing-key: send.otp.email

logging:
  level:
    org.springframework.boot.autoconfigure: ${LOGGING_LEVEL_SPRING_BOOT:INFO}
    bankapp: ${LOGGING_LEVEL_BANKAPP:DEBUG}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - [%X] - %msg%n"

springdoc:
  swagger-ui:
    use-root-path: ${SWAGGER_ON_ROOT:false}
