# compose for testing purposes
# compose.yml

networks:
  bankapp-test:
    external: true
  bankapp-auth:
    driver: bridge

services:
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bankapp-auth-service
    ports:
      - "8080:8080"
    networks:
      - bankapp-test
    depends_on:
      postgres-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - "docker/.env.docker"
    healthcheck:
      test: [ "CMD-SHELL", "wget -q -O - http://localhost:8080/api/actuator/health | grep -q '\"status\":\"UP\"'" ]
      interval: 10s
      timeout: 10s
      retries: 5

  # notification microservice for straightforward testing.
  #  notification-service:
  #    image: bankappproject/bankapp-notification-service
  #    container_name: auth-bankapp-notification-service
  #    networks:
  #      - bankapp-test
  #    env_file:
  #      - "docker/.env.docker.notification-service"
  #    depends_on:
  #      rabbitmq:
  #        condition: service_healthy
  #      auth-service:
  #        condition: service_healthy
  #    pull_policy: always

  postgres-db:
    image: postgres:16
    container_name: auth-dev-postgres-db
    ports:
      - "5432:5432"
    networks:
      - bankapp-test
    env_file:
      - "docker/.env.docker"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 10s
      retries: 5


  redis:
    image: redis:7-alpine
    container_name: auth-dev-redis
    ports:
      - "6379:6379"
    networks:
      - bankapp-test
    env_file:
      - "docker/.env.docker"
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
      interval: 10s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "127.0.0.1:15672:15672"
    networks:
      - bankapp-test
    env_file:
      - "docker/.env.docker"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "node_health_check" ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
